<templateSet group="JavaScript">
  <template name="import" value="import {$ITEM$$END$} from &quot;$MODULE$&quot;;" description="Import statement - import {b} from 'a'" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="importd" value="import $ITEM$ from &quot;$MODULE$&quot;;&#10;$END$" description="Import statement - import b from 'a'" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="jsSuggestImportedEntityName()" defaultValue="Namespace" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ef" value="export function $NAME$ ($PARAMS$) {&#10;  $END$&#10;}" description="Insert an exported function" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="camelCase(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="r" value="return $END$" description="return" toReformat="false" toShortenFQNames="true" />
  <template name="ec" value="export const $NAME$ = $END$" description="Insert an exported constant" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="camelCase(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="st" value="import { Construct, Stack, StackProps } from &quot;@aws-cdk/core&quot;&#10;&#10;export class $NAME$ extends Stack {&#10;  constructor (scope: Construct, id: string, props?: StackProps) {&#10;    super(scope, id, props)&#10;    $END$&#10;  }&#10;}" description="Instert a AWS CDK stack" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="eg" value="export function * $NAME$ ($PARAMS$) {&#10;  $END$&#10;}" description="Insert an exported generator function" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="camelCase(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="export" value="export {$ITEM$$END$} from &quot;$MODULE$&quot;;" description="Export statement" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="const" value="const { $ITEM$$END$ } = $OBJ$;" description="const destructuring" toReformat="true" toShortenFQNames="true">
    <variable name="OBJ" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ITEM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
  <template name="try-catch" value="try {&#10;  $SELECTION$&#10;} catch(err) {&#10;  $END$&#10;}" description="Surround with try-catch" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="JS_TOP_LEVEL_STATEMENT" value="true" />
      <option name="TS_EXPRESSION" value="true" />
      <option name="TS_STATEMENT" value="true" />
      <option name="TS_TOP_LEVEL_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>